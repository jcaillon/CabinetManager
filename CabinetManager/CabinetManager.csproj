<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup Label="Basic info">
    <!-- Exe or Library-->
    <OutputType>Library</OutputType>
    <AssemblyName>CabinetManager</AssemblyName>
    <RootNamespace>$(AssemblyName)</RootNamespace>
    <Version>1.0.0-beta</Version>
    <!-- Assembly.GetExecutingAssembly().GetName().Version = $(Version) but completed if necessary to make a 4 digit version and without what is after the dash -->
    <!-- FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly().Location).ProductVersion = $(Version) -->
    <!-- FileVersionInfo.GetVersionInfo(Assembly.GetExecutingAssembly().Location).FileVersion = $(FileVersion) -->
    <FileVersion>$(VersionPrefix)</FileVersion>
    <!-- this will be the product name-->
    <Product>CabinetManager</Product>
    <!-- this will be the file description -->
    <AssemblyTitle>$(Product) - Manage Microsoft Cabinet Format in pure C#</AssemblyTitle>
    <Copyright>Copyright (c) 2018 - Julien Caillon - GNU General Public License v3</Copyright>
    <ApplicationIcon>
    </ApplicationIcon>
  </PropertyGroup>
  <PropertyGroup Label="Package info basic">
    <Title>$(AssemblyTitle)</Title>
    <Description>$(AssemblyTitle)</Description>
    <Company>Noyacode</Company>
    <Authors>jcailon</Authors>
  </PropertyGroup>
  <PropertyGroup Label="Package info">
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageId>$(Company).$(AssemblyName)</PackageId>
    <PackageVersion>$(Version)</PackageVersion>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://github.com/jcaillon/$(Product)/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/jcaillon/$(Product)</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/jcaillon/$(Product).git</RepositoryUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/jcaillon/$(Product)/master/docs/logo.png</PackageIconUrl>
    <PackageReleaseNotes>
    </PackageReleaseNotes>
    <PackageTags>cab cabinet microsoft archive manager</PackageTags>
    <PackageOutputPath>$(OutputPath)</PackageOutputPath>
    <!-- allow pdb to be packed with the the nuget package (instead of having a separate pack for debug symbols) -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <IncludeSource>true</IncludeSource>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludeSymbols>true</IncludeSymbols>
    <IsPackable>true</IsPackable>
  </PropertyGroup>
  <PropertyGroup Label="Compilation info">
    <!-- https://docs.microsoft.com/en-us/dotnet/standard/frameworks -->
    <TargetFrameworks>net461;netstandard2.0</TargetFrameworks>
    <!-- The operating system you are building for. Valid values are "Any CPU", "x86", and "x64" -->
    <Platform>Any Cpu</Platform>
    <Configuration>Release</Configuration>
    <SolutionDir Condition=" $(SolutionDir) == ''">..\</SolutionDir>
    <DebugSymbols>true</DebugSymbols>
    <Optimize Condition=" '$(Configuration)' == 'Release' ">true</Optimize>
  </PropertyGroup>
  <PropertyGroup Label="Extra stuff">
    <DefineConstants Condition=" '$(TargetFramework)'=='net461' ">$(DefineConstants);NET461;WINDOWSONLYBUILD</DefineConstants>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!-- throw an exception on overflow instead of failing quietly -->
    <CheckForOverflowUnderflow>true</CheckForOverflowUnderflow>
    <AllowUnsafeBlocks>false</AllowUnsafeBlocks>
    <!-- <GenerateDocumentationFile>true</GenerateDocumentationFile> -->
  </PropertyGroup>
  <!-- DebugType -->
  <!-- Need to be full if you want .pdb files to work for .net framework <= 4.7.1, otherwise portable is ok -->
  <!-- pdbonly = you get line numbers, full = you can attach the debugger! so use pdbonly for releases, none/embedded/portable -->
  <!-- portable = new .pdb format to use since dotnet and >= 4.7.1, embedded = same as portable excepct the .pdb is inside the .dll -->
  <Choose>
    <When Condition="$(TargetFramework.Contains('netstandard')) OR $(TargetFramework.Contains('netcoreapp'))">
      <PropertyGroup>
        <DebugType>embedded</DebugType>
      </PropertyGroup>
    </When>
    <Otherwise>
      <Choose>
        <When Condition=" '$(Configuration)'=='Debug' ">
          <PropertyGroup>
            <DebugType>full</DebugType>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <DebugType>pdbonly</DebugType>
          </PropertyGroup>
        </Otherwise>
      </Choose>
    </Otherwise>
  </Choose>
</Project>
